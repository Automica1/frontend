'use client';
import React, { useState } from 'react';
import { motion } from 'motion/react';
import { Check, X, Star, Users, Zap, Shield } from 'lucide-react';

const Spotlight = ({
  gradientFirst = "radial-gradient(68.54% 68.72% at 55.02% 31.46%, hsla(210, 100%, 85%, .08) 0, hsla(210, 100%, 55%, .02) 50%, hsla(210, 100%, 45%, 0) 80%)",
  gradientSecond = "radial-gradient(50% 50% at 50% 50%, hsla(210, 100%, 85%, .06) 0, hsla(210, 100%, 55%, .02) 80%, transparent 100%)",
  gradientThird = "radial-gradient(50% 50% at 50% 50%, hsla(210, 100%, 85%, .04) 0, hsla(210, 100%, 45%, .02) 80%, transparent 100%)",
  translateY = -350,
  width = 560,
  height = 1380,
  smallWidth = 240,
  duration = 7,
  xOffset = 100,
}) => {
  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 1.5 }}
      className="pointer-events-none absolute inset-0 h-full w-full"
    >
      <motion.div
        animate={{ x: [0, xOffset, 0] }}
        transition={{
          duration,
          repeat: Infinity,
          repeatType: "reverse",
          ease: "easeInOut",
        }}
        className="absolute top-0 left-0 w-screen h-screen z-40 pointer-events-none"
      >
        <div
          style={{
            transform: `translateY(${translateY}px) rotate(-45deg)`,
            background: gradientFirst,
            width: `${width}px`,
            height: `${height}px`,
          }}
          className="absolute top-0 left-0"
        />
        <div
          style={{
            transform: "rotate(-45deg) translate(5%, -50%)",
            background: gradientSecond,
            width: `${smallWidth}px`,
            height: `${height}px`,
          }}
          className="absolute top-0 left-0 origin-top-left"
        />
        <div
          style={{
            transform: "rotate(-45deg) translate(-180%, -70%)",
            background: gradientThird,
            width: `${smallWidth}px`,
            height: `${height}px`,
          }}
          className="absolute top-0 left-0 origin-top-left"
        />
      </motion.div>
      <motion.div
        animate={{ x: [0, -xOffset, 0] }}
        transition={{
          duration,
          repeat: Infinity,
          repeatType: "reverse",
          ease: "easeInOut",
        }}
        className="absolute top-0 right-0 w-screen h-screen z-40 pointer-events-none"
      >
        <div
          style={{
            transform: `translateY(${translateY}px) rotate(45deg)`,
            background: gradientFirst,
            width: `${width}px`,
            height: `${height}px`,
          }}
          className="absolute top-0 right-0"
        />
        <div
          style={{
            transform: "rotate(45deg) translate(-5%, -50%)",
            background: gradientSecond,
            width: `${smallWidth}px`,
            height: `${height}px`,
          }}
          className="absolute top-0 right-0 origin-top-right"
        />
        <div
          style={{
            transform: "rotate(45deg) translate(180%, -70%)",
            background: gradientThird,
            width: `${smallWidth}px`,
            height: `${height}px`,
          }}
          className="absolute top-0 right-0 origin-top-right"
        />
      </motion.div>
    </motion.div>
  );
};

type StatsCardProps = {
  number: string;
  label: string;
  icon: React.ComponentType<React.SVGProps<SVGSVGElement>>;
};

const StatsCard = ({ number, label, icon: Icon }: StatsCardProps) => (
  <div className="relative w-72 h-60 bg-gradient-to-br from-gray-900 to-black rounded-xl p-6 border border-gray-800 overflow-hidden">
    <div className="absolute top-2 right-2 w-3 h-3 bg-purple-500 rounded-full animate-pulse shadow-lg shadow-purple-500/50"></div>
    <div className="relative z-10 h-full flex flex-col items-center justify-center text-white">
      <Icon className="w-8 h-8 text-purple-400 mb-4" />
      <div className="text-4xl font-bold bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent mb-2">
        {number}
      </div>
      <div className="text-gray-400 text-sm text-center">{label}</div>
    </div>
    <div className="absolute inset-0 bg-gradient-to-br from-purple-900/20 to-transparent"></div>
  </div>
);

type Feature = {
  text: string;
  included: boolean;
};

type PricingCardProps = {
  plan: string;
  price: number;
  period: string;
  features: Feature[];
  popular: boolean;
  buttonText: string;
  onSelect: (plan: string) => void;
};

const PricingCard: React.FC<PricingCardProps> = ({ plan, price, period, features, popular, buttonText, onSelect }) => (
  <div className={`relative w-80 bg-gray-900 rounded-2xl p-8 border transition-all duration-300 hover:scale-105 ${
    popular 
      ? 'border-purple-500 shadow-2xl shadow-purple-500/20' 
      : 'border-gray-700 hover:border-gray-600'
  }`}>
    {popular && (
      <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
        <div className="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-6 py-2 rounded-full text-sm font-semibold">
          Most Popular
        </div>
      </div>
    )}
    
    <div className="text-center mb-8">
      <h3 className="text-2xl font-bold text-white mb-2">{plan}</h3>
      <div className="flex items-baseline justify-center">
        <span className="text-5xl font-bold text-white">${price}</span>
        <span className="text-gray-400 ml-2">/{period}</span>
      </div>
    </div>

    <ul className="space-y-4 mb-8">
      {features.map((feature, index) => (
        <li key={index} className="flex items-center text-gray-300">
          {feature.included ? (
            <Check className="w-5 h-5 text-green-400 mr-3 flex-shrink-0" />
          ) : (
            <X className="w-5 h-5 text-gray-500 mr-3 flex-shrink-0" />
          )}
          <span className={feature.included ? 'text-white' : 'text-gray-500'}>
            {feature.text}
          </span>
        </li>
      ))}
    </ul>

    <button
      onClick={() => onSelect(plan)}
      className={`w-full py-4 rounded-xl font-semibold transition-all duration-300 ${
        popular
          ? 'bg-gradient-to-r from-purple-500 to-pink-500 text-white hover:from-purple-600 hover:to-pink-600 shadow-lg shadow-purple-500/25'
          : 'bg-gray-800 text-white hover:bg-gray-700 border border-gray-600'
      }`}
    >
      {buttonText}
    </button>
  </div>
);

type FeatureCardProps = {
  title: string;
  description: string;
  icon: React.ComponentType<React.SVGProps<SVGSVGElement>>;
};

const FeatureCard: React.FC<FeatureCardProps> = ({ title, description, icon: Icon }) => (
  <div className="bg-gray-900 rounded-xl p-6 border border-gray-800 hover:border-purple-500/50 transition-all duration-300 group">
    <div className="flex items-center mb-4">
      <div className="w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg flex items-center justify-center mr-4 group-hover:scale-110 transition-transform duration-300">
        <Icon className="w-6 h-6 text-white" />
      </div>
      <h3 className="text-xl font-semibold text-white">{title}</h3>
    </div>
    <p className="text-gray-400 group-hover:text-gray-300 transition-colors duration-300">
      {description}
    </p>
  </div>
);

export default function PricingPage() {
  const [billingPeriod, setBillingPeriod] = useState('monthly');

  const plans = {
    monthly: [
      {
        plan: 'Starter',
        price: 29,
        period: 'month',
        features: [
          { text: 'Up to 5 team members', included: true },
          { text: '10GB storage', included: true },
          { text: 'Basic analytics', included: true },
          { text: 'Email support', included: true },
          { text: 'Advanced features', included: false },
          { text: 'Custom integrations', included: false },
        ],
        popular: false,
        buttonText: 'Get Started',
      },
      {
        plan: 'Professional',
        price: 79,
        period: 'month',
        features: [
          { text: 'Up to 25 team members', included: true },
          { text: '100GB storage', included: true },
          { text: 'Advanced analytics', included: true },
          { text: 'Priority support', included: true },
          { text: 'Advanced features', included: true },
          { text: 'Custom integrations', included: false },
        ],
        popular: true,
        buttonText: 'Start Free Trial',
      },
      {
        plan: 'Enterprise',
        price: 199,
        period: 'month',
        features: [
          { text: 'Unlimited team members', included: true },
          { text: 'Unlimited storage', included: true },
          { text: 'Enterprise analytics', included: true },
          { text: '24/7 phone support', included: true },
          { text: 'Advanced features', included: true },
          { text: 'Custom integrations', included: true },
        ],
        popular: false,
        buttonText: 'Contact Sales',
      },
    ],
    yearly: [
      {
        plan: 'Starter',
        price: 290,
        period: 'year',
        features: [
          { text: 'Up to 5 team members', included: true },
          { text: '10GB storage', included: true },
          { text: 'Basic analytics', included: true },
          { text: 'Email support', included: true },
          { text: 'Advanced features', included: false },
          { text: 'Custom integrations', included: false },
        ],
        popular: false,
        buttonText: 'Get Started',
      },
      {
        plan: 'Professional',
        price: 790,
        period: 'year',
        features: [
          { text: 'Up to 25 team members', included: true },
          { text: '100GB storage', included: true },
          { text: 'Advanced analytics', included: true },
          { text: 'Priority support', included: true },
          { text: 'Advanced features', included: true },
          { text: 'Custom integrations', included: false },
        ],
        popular: true,
        buttonText: 'Start Free Trial',
      },
      {
        plan: 'Enterprise',
        price: 1990,
        period: 'year',
        features: [
          { text: 'Unlimited team members', included: true },
          { text: 'Unlimited storage', included: true },
          { text: 'Enterprise analytics', included: true },
          { text: '24/7 phone support', included: true },
          { text: 'Advanced features', included: true },
          { text: 'Custom integrations', included: true },
        ],
        popular: false,
        buttonText: 'Contact Sales',
      },
    ],
  };

  const handlePlanSelect = (plan: string) => {
    console.log(`Selected plan: ${plan}`);
    // Add your plan selection logic here
  };

  return (
    <div className="min-h-screen bg-black text-white">
      {/* Hero Section */}
      <div className="relative h-screen flex md:items-center md:justify-center bg-black/[0.96] bg-grid-white/[0.02] overflow-hidden">
        <Spotlight />
        <div className="p-4 max-w-7xl mx-auto relative z-10 w-full pt-20 md:pt-0">
          <motion.h1 
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="text-4xl md:text-7xl font-bold text-center bg-clip-text text-transparent bg-gradient-to-b from-neutral-50 to-neutral-400"
          >
            Simple, Transparent<br />Pricing
          </motion.h1>
          <motion.p 
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.2 }}
            className="mt-4 font-normal text-base text-neutral-300 max-w-lg text-center mx-auto"
          >
            Choose the perfect plan for your team. Upgrade or downgrade at any time.
          </motion.p>
        </div>
      </div>

      {/* Stats Section */}
      <div className="py-20 px-4">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-5xl font-bold mb-4 bg-gradient-to-r from-white to-gray-400 bg-clip-text text-transparent">
              Trusted by Teams Worldwide
            </h2>
          </div>
          <div className="flex flex-wrap justify-center gap-8">
            <StatsCard number="50K+" label="Active Users" icon={Users} />
            <StatsCard number="99.9%" label="Uptime" icon={Shield} />
            <StatsCard number="24/7" label="Support" icon={Zap} />
          </div>
        </div>
      </div>

      {/* Pricing Toggle */}
      <div className="py-8 px-4">
        <div className="max-w-7xl mx-auto text-center">
          <div className="inline-flex bg-gray-900 rounded-xl p-1 border border-gray-700">
            <button
              onClick={() => setBillingPeriod('monthly')}
              className={`px-6 py-3 rounded-lg font-medium transition-all duration-300 ${
                billingPeriod === 'monthly'
                  ? 'bg-gradient-to-r from-purple-500 to-pink-500 text-white'
                  : 'text-gray-400 hover:text-white'
              }`}
            >
              Monthly
            </button>
            <button
              onClick={() => setBillingPeriod('yearly')}
              className={`px-6 py-3 rounded-lg font-medium transition-all duration-300 ${
                billingPeriod === 'yearly'
                  ? 'bg-gradient-to-r from-purple-500 to-pink-500 text-white'
                  : 'text-gray-400 hover:text-white'
              }`}
            >
              Yearly
              <span className="ml-2 text-xs bg-green-500 text-white px-2 py-1 rounded-full">
                Save 20%
              </span>
            </button>
          </div>
        </div>
      </div>

      {/* Pricing Cards */}
      <div className="py-12 px-4">
        <div className="max-w-7xl mx-auto">
          <div className="flex flex-wrap justify-center gap-8">
            {plans[billingPeriod].map((plan, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
              >
                <PricingCard {...plan} onSelect={handlePlanSelect} />
              </motion.div>
            ))}
          </div>
        </div>
      </div>

      {/* Features Section */}
      <div className="py-20 px-4 bg-gray-950/50">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-5xl font-bold mb-4 bg-gradient-to-r from-white to-gray-400 bg-clip-text text-transparent">
              Why Choose Our Platform?
            </h2>
            <p className="text-gray-400 text-lg max-w-2xl mx-auto">
              Everything you need to scale your business, backed by enterprise-grade security and reliability.
            </p>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            <FeatureCard
              title="Lightning Fast"
              description="Built for speed with optimized performance that scales with your business needs."
              icon={Zap}
            />
            <FeatureCard
              title="Secure & Reliable"
              description="Enterprise-grade security with 99.9% uptime guarantee and automatic backups."
              icon={Shield}
            />
            <FeatureCard
              title="Team Collaboration"
              description="Seamless collaboration tools that keep your team connected and productive."
              icon={Users}
            />
          </div>
        </div>
      </div>

      {/* CTA Section */}
      <div className="py-20 px-4">
        <div className="max-w-4xl mx-auto text-center">
          <h2 className="text-3xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-white to-gray-400 bg-clip-text text-transparent">
            Ready to Get Started?
          </h2>
          <p className="text-gray-400 text-lg mb-8 max-w-2xl mx-auto">
            Join thousands of teams who trust our platform to power their business growth.
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <button className="px-8 py-4 bg-gradient-to-r from-purple-500 to-pink-500 text-white rounded-xl font-semibold hover:from-purple-600 hover:to-pink-600 transition-all duration-300 shadow-lg shadow-purple-500/25">
              Start Free Trial
            </button>
            <button className="px-8 py-4 bg-gray-800 text-white rounded-xl font-semibold hover:bg-gray-700 border border-gray-600 transition-all duration-300">
              Contact Sales
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}