'use client'
import React, { useState } from 'react';
import { Eye, Camera, Table, QrCode, AlertCircle, User, Scissors, ArrowRight, Check } from 'lucide-react';

// Shared ServiceCard component
type Service = {
  title: string;
  description: string;
  icon: React.ElementType;
  link?: string;
  features?: string[];
  gradient: string;
};

type ServiceCardProps = {
  service: Service;
  isComingSoon?: boolean;
  index: number;
  hoveredCard: number | null;
  setHoveredCard: (index: number | null) => void;
};

const ServiceCard: React.FC<ServiceCardProps> = ({ service, isComingSoon = false, index, hoveredCard, setHoveredCard }) => {
  const Icon = service.icon;
  
  return (
    <div
      className={`relative group bg-gray-900/50 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50 transition-all duration-500 hover:border-purple-500/50 hover:bg-gray-800/50 ${
        isComingSoon ? 'opacity-75' : ''
      }`}
      onMouseEnter={() => setHoveredCard(index)}
      onMouseLeave={() => setHoveredCard(null)}
    >
      {/* Gradient overlay */}
      <div className={`absolute inset-0 bg-gradient-to-br ${service.gradient} opacity-0 group-hover:opacity-10 rounded-2xl transition-opacity duration-500`} />
      
      {/* Coming Soon Badge */}
      {isComingSoon && (
        <div className="absolute top-4 right-4 bg-yellow-500/20 text-yellow-400 px-3 py-1 rounded-full text-xs font-medium">
          Coming Soon
        </div>
      )}
      
      {/* Icon */}
      <div className={`w-14 h-14 bg-gradient-to-br ${service.gradient} rounded-xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300`}>
        <Icon className="w-7 h-7 text-white" />
      </div>
      
      {/* Content */}
      <div className="space-y-4">
        <h3 className="text-xl font-bold text-white group-hover:text-purple-300 transition-colors duration-300">
          {service.title}
        </h3>
        
        <p className="text-gray-300 text-sm leading-relaxed">
          {service.description}
        </p>
        
        {/* Features */}
        {service.features && (
          <div className="space-y-2">
            {service.features.map((feature, idx) => (
              <div key={idx} className="flex items-center space-x-2 text-xs">
                <Check className="w-3 h-3 text-green-400 flex-shrink-0" />
                <span className="text-gray-400">{feature}</span>
              </div>
            ))}
          </div>
        )}
        
        {/* CTA Button */}
        {!isComingSoon && (
          <div className="pt-4">
            <button className="flex items-center space-x-2 text-purple-400 hover:text-purple-300 transition-colors duration-300 group/btn">
              <span className="text-sm font-medium">Learn More</span>
              <ArrowRight className="w-4 h-4 group-hover/btn:translate-x-1 transition-transform duration-300" />
            </button>
          </div>
        )}
      </div>
      
      {/* Hover effect border */}
      <div className="absolute inset-0 rounded-2xl bg-gradient-to-r from-purple-500/20 to-blue-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none" 
           style={{
             background: `linear-gradient(45deg, transparent, ${hoveredCard === index ? 'rgba(147, 51, 234, 0.1)' : 'transparent'}, transparent)`
           }} />
    </div>
  );
};

// 1. Available Solutions Component
type AvailableSolutionsProps = {
  hoveredCard: number | null;
  setHoveredCard: (index: number | null) => void;
};

const AvailableSolutions: React.FC<AvailableSolutionsProps> = ({ hoveredCard, setHoveredCard }) => {
  const solutions = [
    {
      title: "Sign Verify",
      description: "Our Sign Extraction API automatically identifies and extracts text from signs, billboards, and displays in images and videos. Perfect for retail analysis, urban planning, and accessibility applications.",
      icon: Eye,
      link: "/solutions/sign_verify",
      features: ["Multi-language support", "High accuracy in varied lighting", "Real-time processing"],
      gradient: "from-purple-600 to-blue-600"
    },
    {
      title: "QR Extract",
      description: "Advanced QR code detection and extraction from images with high accuracy. Supports multiple QR codes in a single image and works even with damaged or partially obscured codes.",
      icon: QrCode,
      link: "/solutions/QR_extract",
      features: ["Batch processing", "Damaged code recovery", "Multi-format support"],
      gradient: "from-blue-600 to-cyan-600"
    },
    {
      title: "ID Crop",
      description: "Automatically detect, extract, and structure tabular data from documents, images, and scanned files with our Table Detection API. Essential for financial analysis, data migration, and document processing.",
      icon: Table,
      link: "/solutions/id_crop",
      features: ["Complex table recognition", "CSV and Excel export", "Maintains formatting integrity"],
      gradient: "from-cyan-600 to-teal-600"
    },
    {
      title: "QR Masking",
      description: "Create branded, visually appealing QR codes without compromising scan reliability. Our QR Masking API enables customization while ensuring optimal functionality.",
      icon: QrCode,
      link: "/solutions/QR_masking",
      features: ["Brand integration", "Error correction", "Analytics tracking"],
      gradient: "from-teal-600 to-green-600"
    },
    {
      title: "Face Verify",
      description: "Advanced facial recognition and verification system with high accuracy and privacy protection. Perfect for security applications and identity verification systems.",
      icon: User,
      link: "/solutions/face_verify",
      features: ["Privacy-first approach", "Liveness detection", "Cross-platform compatibility"],
      gradient: "from-green-600 to-yellow-600"
    },
    {
      title: "Face Cropping",
      description: "Intelligent face detection and cropping with automatic optimization for profile pictures, ID photos, and document processing applications.",
      icon: Scissors,
      link: "/solutions/face_cropping",
      features: ["Auto-alignment", "Quality enhancement", "Batch processing"],
      gradient: "from-yellow-600 to-orange-600"
    }
  ];

  return (
    <div className="mb-20">
      <h3 className="text-2xl font-bold text-white mb-8 text-center">
        Available Now
      </h3>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {solutions.map((solution, index) => (
          <ServiceCard 
            key={solution.title} 
            service={solution} 
            index={index}
            hoveredCard={hoveredCard}
            setHoveredCard={setHoveredCard}
          />
        ))}
      </div>
    </div>
  );
};

// 2. Coming Soon Component
type ComingSoonProps = {
  hoveredCard: number | null;
  setHoveredCard: (index: number | null) => void;
  solutionsCount?: number;
};

const ComingSoon: React.FC<ComingSoonProps> = ({ hoveredCard, setHoveredCard, solutionsCount = 6 }) => {
  const comingSoon = [
    {
      title: "Document Classification",
      description: "Advanced document classification with multi-category support and intelligent content analysis.",
      icon: AlertCircle,
      gradient: "from-gray-600 to-gray-700"
    },
    {
      title: "Voice AI",
      description: "Enterprise voice recognition and natural language processing with real-time transcription capabilities.",
      icon: AlertCircle,
      gradient: "from-gray-600 to-gray-700"
    },
    {
      title: "Audio Summarization",
      description: "Convert audio recordings into concise text summaries with key point extraction and sentiment analysis.",
      icon: AlertCircle,
      gradient: "from-gray-600 to-gray-700"
    },
  ];

  return (
    <div>
      <h3 className="text-2xl font-bold text-white mb-8 text-center">
        Coming Soon
      </h3>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {comingSoon.map((service, index) => (
          <ServiceCard 
            key={service.title} 
            service={service}
            index={solutionsCount + index}
            isComingSoon={true}
            hoveredCard={hoveredCard}
            setHoveredCard={setHoveredCard}
          />
        ))}
      </div>
    </div>
  );
};

// 3. CTA Component
const CTASection = () => {
  return (
    <div className="text-center mt-20">
      <div className="bg-gradient-to-r from-purple-900/20 to-blue-900/20 rounded-3xl p-8 border border-purple-500/20">
        <h3 className="text-3xl font-bold mb-4 bg-gradient-to-r from-purple-400 to-blue-400 bg-clip-text text-transparent">
          Ready to Get Started?
        </h3>
        <p className="text-gray-300 mb-6 max-w-2xl mx-auto">
          Join thousands of developers already using our APIs to build amazing applications.
        </p>
        <div className="flex flex-col sm:flex-row gap-4 justify-center">
          <button className="bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-500 hover:to-blue-500 text-white px-8 py-3 rounded-xl font-semibold transition-all duration-300 hover:scale-105 hover:shadow-lg hover:shadow-purple-500/25">
            View Documentation
          </button>
          <button className="border border-purple-500 text-purple-400 hover:bg-purple-500/10 px-8 py-3 rounded-xl font-semibold transition-all duration-300 hover:scale-105">
            Contact Sales
          </button>
        </div>
      </div>
    </div>
  );
};

// Main component that combines all three
const ServicesShowcase = () => {
  const [hoveredCard, setHoveredCard] = useState(null);

  return (
    <div className="min-h-screen bg-black text-white py-20 px-4">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="text-center mb-16">
          <div className="inline-flex items-center space-x-2 bg-purple-500/10 text-purple-400 px-4 py-2 rounded-full text-sm font-medium mb-6">
            <div className="w-2 h-2 bg-purple-400 rounded-full animate-pulse" />
            <span>API Solutions</span>
          </div>
          
          <h2 className="text-4xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-white via-purple-200 to-purple-400 bg-clip-text text-transparent">
            Powerful AI APIs
          </h2>
          
          <p className="text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed">
            Transform your applications with our cutting-edge computer vision and AI APIs. 
            Built for developers, designed for scale.
          </p>
        </div>

        {/* Available Solutions */}
        <AvailableSolutions 
          hoveredCard={hoveredCard} 
          setHoveredCard={setHoveredCard} 
        />

        {/* Coming Soon */}
        <ComingSoon 
          hoveredCard={hoveredCard} 
          setHoveredCard={setHoveredCard}
          solutionsCount={6}
        />

        {/* Bottom CTA */}
        <CTASection />
      </div>
    </div>
  );
};

export default ServicesShowcase;